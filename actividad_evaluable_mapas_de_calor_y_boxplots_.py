# -*- coding: utf-8 -*-
"""Actividad Evaluable: Mapas de calor y boxplots .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uEXFuFC1wc7xU_GWC7nIGpwejeTS-H5i

#File.py 
## **Analisis de TEMPXMLFILEDATA.csv**

Regina Abedrop - A01702211

Diego Gonzalez Ramirez - A01351560

Sofia Sanchez Bolarin - A01274741

Antonio Jaime Lopez - A01424138

Carga los datos usando tu lector de csv o con pandas. Es recomendable hacerlo con pandas.

Realiza el análisis de las variables usando diagramas de cajas y bigotes, histogramas y mapas de calor.
"""

import pandas as pd
import numpy as np
import plotly.express as px
from plotly.subplots import make_subplots
import plotly.graph_objects as go

def revDF(df):
    print('=> Registros: ', df.shape[0], '\n')
    print('=> Columnas: ', df.shape[1], '\n')
    print('=> Nombre de las columnas:\n',df.columns.values, '\n')
    print('=> Tipos de datos:\n',df.dtypes, '\n')
    print('=> Cantidad de nulos:\n',df.isna().sum(), '\n')
    print(df.describe().T,'\n')
    
    num = []
    for i in df.columns.values:
        tipo = str(df[i].dtype)
        if "int" in tipo or "float" in tipo:
            num.append(i)
    print('Columnas numericas: \n', num, '\n')
    
    X = df.select_dtypes(include='number')
    fig = make_subplots(rows=1, cols=1)
    
    for i in range(0,len(X.columns)):
        fig.add_trace(go.Box(y=X.iloc[i]))
    
    fig.show()

dfXML=pd.read_csv('TEMPXMLFILEDATA.csv')
revDF(dfXML)

"""En las gráficas anteriores podemos observar distintos boxplots para cada una de las variables numericas del conjunto de datos. Estos diagramas nos permites analizar los outliers, las medias y donde es que se concentran la mayor cantidad de datos de cada una de las variables. """

px.histogram(dfXML, x = 'CUSTOMERID', color = 'CUSTOMERID')

px.histogram(dfXML, x = 'RECEIVEDBY')

px.histogram(dfXML, x = 'INVOICETYPE', color='INVOICETYPE')

px.histogram(dfXML, x = 'FILETYPE')

px.histogram(dfXML, x = 'RECEIVEDTAXID')

px.histogram(dfXML, x = 'VAT')

px.histogram(dfXML, x = 'ISPAYMENTPENDING')

px.histogram(dfXML, x = 'BRANCHID', color = 'BRANCHID')

"""En las graficas anteriores podemos observar distintos histogramas que describen el comportamiento de las variables de nuestro conjunto de datos. Elegimos las variables que consideramos mas representativas para realizar estas graficas para estudiar su distribución. """

data = dfXML[['VATAMOUNT', 'INCOMETAXAMT', 'TOTALBEFORTAX', 'TOTALAFTERTAX', 'AMOUNTPAID']].head(3000)

import seaborn as sns
import matplotlib.pyplot as plt

ax = sns.heatmap(data, linewidth=0.3,cmap='cool', annot = True)
plt.show()